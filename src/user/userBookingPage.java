/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user;

import admin.adminApplicants;
import admin.bookingForm;
import admin.roomForm;
import admin.userForm;
import config.Session;
import config.dbConnector;
import internalPages.adminPage;
import java.awt.Color;
import java.awt.Container;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.time.LocalDate;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author cedricjadee
 */
public class userBookingPage extends javax.swing.JInternalFrame {

    /**
     * Creates new form bookingPage
     */
    public userBookingPage() {
        initComponents();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);

    }
    
   

        
    

    
    public static LocalDate currentDate = LocalDate.now();
        
    
    
    public void close(){
            
            this.dispose();
            userForm md = new userForm();
            md.setVisible(true);
                        
        }
    
        Color hover = new Color(0,0,0);
        Color button = new Color (0,51,51);
        public String action,status;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pt = new javax.swing.JComboBox<>();
        label1 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        rt = new javax.swing.JComboBox<>();
        in = new com.toedter.calendar.JDateChooser();
        rid = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(659, 420));
        jPanel1.setPreferredSize(new java.awt.Dimension(659, 420));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/register.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 400));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Booking");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, 20));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 30, 10));

        pt.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        pt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Card", "Cash" }));
        pt.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Pay Type"));
        jPanel1.add(pt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 190, 50));

        label1.setBackground(new java.awt.Color(0, 51, 51));
        label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        label1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                label1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label1MouseExited(evt);
            }
        });
        label1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        label.setForeground(new java.awt.Color(255, 255, 255));
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("BOOK");
        label1.add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 100, 20));

        jPanel1.add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, 100, 40));

        name.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 14))); // NOI18N
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 400, 50));

        rt.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        rt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Room", "Double Room", "Triple Room" }));
        rt.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Room Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel1.add(rt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 190, 50));

        in.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Check In", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        in.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(in, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 190, 60));

        rid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rid.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "ROOM ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        rid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ridActionPerformed(evt);
            }
        });
        jPanel1.add(rid, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 140, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseClicked

        if(name.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All fields are required!");
        }else{
                try{
                    
                    Session sess = Session.getInstance();
                    dbConnector dbc = new dbConnector();
                     
                    String query = "SELECT * FROM tbl_room WHERE r_id = 'Available'";
                    ResultSet resultSet = dbc.getData(query);
                    if(resultSet.next()){  
                    
                        status = resultSet.getString("r_status");
                        if(!status.equalsIgnoreCase("Available")){
                                JOptionPane.showMessageDialog(null, "ROOM IS NOT AVAILABLE!");
                        }else{
                            
                                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                                        String formattedInDate = sdf.format(in.getDate());
                                        
                                    boolean result = dbc.insertData("INSERT INTO tbl_booking ("

                                        + "u_id,"
                                        + "r_id,"   
                                        + "b_name,"
                                        + "b_in,"
                                        + "b_statusdate,"
                                        + "b_paytype,"
                                        + "b_roomtype,"
                                        + "b_status) VALUES ("
                                        + "'"+sess.getUid()+"',"    
                                        + "'"+rid.getSelectedItem()+"',"    
                                        + "'"+name.getText()+"',"
                                        + "'"+formattedInDate+"',"
                                        + "'"+currentDate+"',"
                                        + "'"+pt.getSelectedItem()+"',"
                                        + "'"+rt.getSelectedItem()+"',"
                                        + "'Pending')");
                                    
                                if(true){   
                                    dbc.updateData("UPDATE tbl_room SET "
                                        + " r_status = 'Not Available'"
                                        + " WHERE r_id = '"+rid.getSelectedItem()+"'");
                                    JOptionPane.showMessageDialog(null, "BOOKED Successfully!");
                                }else{
                                    JOptionPane.showMessageDialog(null, "BOOKED Failed!");
                                }
                              }
                        close();
                        
                    }else{
                        System.out.println("Saving Data Failed!");
                    }
                }catch(Exception ex){
                    System.out.println(""+ex);
                }
        }
    }//GEN-LAST:event_label1MouseClicked

    private void label1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseEntered
        label1.setBackground(hover);
    }//GEN-LAST:event_label1MouseEntered

    private void label1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseExited
        label1.setBackground(button);
    }//GEN-LAST:event_label1MouseExited

    private void ridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ridActionPerformed
                                   
        
    }//GEN-LAST:event_ridActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.toedter.calendar.JDateChooser in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JLabel label;
    private javax.swing.JPanel label1;
    public javax.swing.JTextField name;
    private javax.swing.JComboBox<String> pt;
    public javax.swing.JComboBox<String> rid;
    public javax.swing.JComboBox<String> rt;
    // End of variables declaration//GEN-END:variables
}
